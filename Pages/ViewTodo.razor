@page "/todo/{Id}"

<!-- Importation des espaces de noms et injection des dépendances -->
@using TodoListMauiApp.Models
@using TodoListMauiApp.Services
@inject ITodoService TodoService
@inject NavigationManager Navigation

<!-- Affichage du titre de la page -->
<h3>View Todo</h3>

<!-- Condition : si la tâche (todo) existe -->
@if (todo != null)
{
    <!-- Affichage du nom de la tâche -->
    <p><strong>Name:</strong> @todo.Name</p>
    <!-- Affichage de la description de la tâche -->
    <p><strong>Description:</strong> @todo.Description</p>
    <!-- Lien pour revenir à la liste des tâches -->
    <p><a href="/fetchdata">Back to Todo List</a></p>
}
else
{
<!-- Message indiquant que la tâche n'a pas été trouvée -->
<p>Todo not found!</p>
}

<!-- Section de code C# -->
@code {
    <!-- Déclaration d'une propriété Id qui reçoit la valeur de l'URL -->
    [Parameter]
    public string Id { get; set; }

    <!-- Déclaration d'une instance de TodoModel pour stocker les détails de la tâche -->
    private TodoModel todo;

    <!-- Méthode appelée lors de l'initialisation de la page -->
    protected override async Task OnInitializedAsync()
    {
        <!-- Convertir la chaîne Id en entier si nécessaire -->
        if (int.TryParse(Id, out int todoId))
        {
            <!-- Appel au service TodoService pour obtenir les détails de la tâche par son Id -->
            todo = await TodoService.GetTodoByIdAsync(todoId);
        }
    }
}